@using Confidami.Common
@model Confidami.Web.ViewModel.SearchViewModel

<!--- risultati ricerce ora statico -->
<article>
    @if (string.IsNullOrEmpty(Model.Key))
    {
        <h2>Effettua la tua ricerca!</h2>
    }
    else
    {
        if (@Model.SearchResults.Posts.Any())
        {
            <div class="panel panel-success">
                <div class="panel-heading">Risultati ricerca</div>
                <div class="panel-body">
                    @Pages()
                    <div class="list-group">
                        @foreach (var res in Model.SearchResults.Posts)
                        {
                            <a href="@Url.RouteUrl(RouteStore.SingleContentRoute, new {categoryName = res.CategorySlug, id = res.IdPost, slugTitle = res.TitleSlug})" class=" list-group-item">
                                <strong class="list-group-item-heading">@HighLightWord(@res.Title,Model.Key)</strong>
                                <p class="list-group-item-text text-muted">@HighLightWord(res.Body, Model.Key))</p>
                            </a>
                        }

                    </div>

                </div>

                @Pages()
            </div>
        }
        else
        {
            <h2>Nessun risultato trovato!</h2>

        }
    }


</article>

@helper HighLightWord(string body,string key)
{

     {WriteLiteral(body.Replace(key, String.Format("<strong>{0}</strong>", key)));}
}

@helper  Pages()
{
    if (ViewBag.NumberOfPages == 1)
    {
        return;
    }

    <div class="row">

        <ul class="pager">
            <label>@ViewBag.CurrentPage di @ViewBag.NumberOfPages</label>
            <li @((bool)ViewBag.IsFirstPage ? "class=disabled" : "")>

                @if (!(bool)ViewBag.IsFirstPage)
                {
                    @Html.ActionLink("Precedente", ActionsStore.SearchAction, new { key = @Model.Key, page = ViewBag.PreviuosPage });
                }
                else
                {
                    <a href="#" onclick="return false;">Precedente</a>
                }

            <li @((bool)ViewBag.IsLastPage ? "class=disabled" : "")>

                @if (!(bool)ViewBag.IsLastPage)
                {
                    @Html.ActionLink("Successivo", ActionsStore.SearchAction, new { key = @Model.Key,page = ViewBag.NextPage });
                }
                else
                {
                    <a href="#" onclick="return false;">Successivo</a>
                }

        </ul>
    </div>
}
