@using System.Web.UI.WebControls
@using Confidami.Common
@using Confidami.Web.ViewModel
@model Confidami.Web.ViewModel.InsertPostViewModel



<form class="form-horizontal" role="form" action="@Url.Action("AddPost", "Contents")" method="post" @*data-parsley-validate*@>
    @*@Html.ValidationSummary(false)*@
    <div class="form-group">
        <label class="col-sm-2 control-label" for="title">Titolo</label>
        <div class="col-sm-10">
            <input type="text" class="form-control" id="title" name="title" placeholder="Titolo">
        </div>
    </div>

    <div class="form-group" id="body">
        <label class="col-sm-2 control-label" for="body">Messaggio</label>
        <div class="col-sm-10">
            <input type="text" class="form-control" id="body" name="body" placeholder="Messaggio">
        </div>
    </div>

    <div class="form-group" id="category">
        <label class="col-sm-2  control-label" for="body">Categoria</label>
        <div class="col-sm-10">
            <select name="idcategory" class="form-control">
                @foreach (var cat in Model.Categories)
                {
                    <option value="@cat.IdCategory">@cat.Description</option>
                }
            </select>
        </div>
    </div>

    <div class="form-group">
        <div class="col-sm-offset-2 col-sm-10">
            <input type="submit" value="Salva" class="btn btn-primary btn-sm" action=@Url.Action(ActionsStore.AddPost, ControllerStore.Contents)>
        </div>
    </div>

</form>

<!-- drop zone area -->

<div class="panel panel-default">
    <div class="panel-heading">Allega documenti alla segnalazione</div>
    <div class="panel-body">


        <div id="actions" class="row">

            <div class="col-sm-12">
                <!-- The fileinput-button span is used to style the file input field as button -->
                <span class="btn btn-xs btn-success fileinput-button dz-clickable">
                    <i class="glyphicon glyphicon-plus"></i>
                    <span>Add files...</span>
                </span>
                <button type="submit" class="btn btn-xs btn-primary start">
                    <i class="glyphicon glyphicon-upload"></i>
                    <span>Start upload</span>
                </button>
                <button type="reset" class="btn btn-xs btn-warning cancel">
                    <i class="glyphicon glyphicon-ban-circle"></i>
                    <span>Cancel upload</span>
                </button>
            </div>

            <br /><hr />

            <div class="col-lg-12">
                <!-- The global file processing state -->
                <span class="fileupload-process">
                    <div id="total-progress" class="progress progress-striped active" role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-valuenow="0">
                        <div class="progress-bar progress-bar-success" style="width:0%;" data-dz-uploadprogress=""></div>
                    </div>
                </span>
            </div>

            

        </div>


        <!-- previews container -->
        <div class="table table-striped files" id="previews">
            
            <div id="template" class="file-row" @*style="display:block;"*@>
                
                <div>
                    <span class="preview"><img data-dz-thumbnail /></span>
                </div>
                <div>
                    <p class="name" data-dz-name></p>
                    <strong class="error text-danger" data-dz-errormessage></strong>
                </div>
                <div>
                    <p class="size" data-dz-size></p>
                    <div class="progress progress-striped active" role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-valuenow="0">
                        <div class="progress-bar progress-bar-success" style="width:0%;" data-dz-uploadprogress></div>
                    </div>
                </div>
                <div>
                    <button class="btn btn-primary start">
                        <i class="glyphicon glyphicon-upload"></i>
                        <span>Start</span>
                    </button>
                    <button data-dz-remove class="btn btn-warning cancel">
                        <i class="glyphicon glyphicon-ban-circle"></i>
                        <span>Cancel</span>
                    </button>
                    <button data-dz-remove class="btn btn-danger delete">
                        <i class="glyphicon glyphicon-trash"></i>
                        <span>Delete</span>
                    </button>
                </div>
            </div>                 
        </div>

    </div>
</div>
<!--------------------->

<!-- JS -->
@section scripts {
    <script type="text/javascript">
    $(function () {
       
        var previewNode = document.querySelector("#template");
        previewNode.id = "";
        var previewTemplate = previewNode.parentNode.innerHTML;
        previewNode.parentNode.removeChild(previewNode);
        
            var myDropzone = new Dropzone(document.body, {
                url: "@Url.Action(ActionsStore.Upload, ControllerStore.Contents)",
                thumbnailWidth: 80,
                thumbnailHeight: 80,
                parallelUploads: 20,
                previewTemplate: previewTemplate,
                autoQueue: false, // Make sure the files aren't queued until manually added
                previewsContainer: "#previews", // Define the container to display the previews
                clickable: ".fileinput-button", // Define the element that should be used as click trigger to select files.
            });        

        myDropzone.on("addedfile", function (file) {
            //$(".start").on('click', function () { myDropzone.enqueueFile(file); });
            file.previewElement.querySelector(".start").onclick = function () { myDropzone.enqueueFile(file); };
        });

        myDropzone.on('init', function () {

        });

        // Update the total progress bar
        myDropzone.on("totaluploadprogress", function (progress) {
            document.querySelector("#total-progress .progress-bar").style.width = progress + "%";
            //$("#total-progress .progress-bar").css('width', progress + "%");
        });

        myDropzone.on("sending", function (file) {
            //document.querySelector("#total-progress").style.opacity = "1";
            file.previewElement.querySelector(".start").setAttribute("disabled", "disabled");
            // Show the total progress bar when upload starts
            $("#total-progress").css('opacity','1');
            // And disable the start button
            //$(".start").prop("disabled", "disabled");
        });

        myDropzone.on("queuecomplete", function (progress) {
            //document.querySelector("#total-progress").style.opacity = "0";
            $("#total-progress").css('opacity', '0');
        });

        $("#actions .start").on('click', function () {
            myDropzone.enqueueFiles(myDropzone.getFilesWithStatus(Dropzone.ADDED));
        });

        $("#actions .cancel").on('click', function () {
            myDropzone.removeAllFiles(true);
        });


        @*var loadattachements = function (thisDropzone) {

                var jqxhr = $.getJSON("/@ControllerStore.Contents/GetTempAttachMents", function () {

                }).done(function (attachements) {

                    $.each(attachements, function (key, attachement) {

                        console.log('Allegato ' + key, attachement);

                        @{
                            var path = @Url.Content("~/Uploads/Temp/" + ViewBag.CurrentUserId + "/");
                         }

                        var objAttachement = {name: attachement.Name,size: attachement.Size };
                        thisDropzone.options.addedfile.call(thisDropzone, objAttachement);

                        var extension = attachement.Name.substr((attachement.Name.lastIndexOf('.') + 1));
                        extensionList = ['jpg', 'jpeg', 'png', 'gif'];
                        if (extensionList.indexOf(extension) != -1) {
                            thisDropzone.options.thumbnail.call(thisDropzone, objAttachement, '@(path)' + attachement.Name);
                        }
                        thisDropzone.options.maxFiles = thisDropzone.options.maxFiles - 1;
                    });
                }).fail(function (jqxhr, textStatus, error) {
                    var err = textStatus + ", " + error;
                    alert("GetTempAttachMents Failed "+err);

                }).always(function () { });
            };

            Dropzone.options.dropzoneForm = {
                maxFiles: 3,
                addRemoveLinks: true,
                maxFilesize: 1,
                acceptedFiles: 'image/jpeg,image/jpg,image/png,image/gif,application/pdf,application/msword,text/plain',
                init: function () {

                    loadattachements(this);

                    this.on("complete", function (attachement) { //Upload complete once for file

                        if (!attachement.accepted) {
                            console.log('file non accettato')
                        } else {
                            console.log('onComplete:', attachement)
                            //var res = JSON.parse(attachement.xhr.responseText);
                        }



                    });
                    this.on('removedfile', function (attachement) {
                        console.log('rimosso:', attachement)
                    });

                }
            }; // DROPZONE*@



        //Dropzone.options.formUpload = {

        //    //prevents Dropzone from uploading dropped files immediately
        //    autoProcessQueue: false,
        //    uploadMultiple: true,
        //    parallelUploads: 100,
        //    maxFiles: 4,
        //    maxFilesize : 2,

        //    init: function () {
        //        var submitButton = document.querySelector("#submit-all");
        //        var myDropzone = this; //closure

        //        submitButton.addEventListener("click", function(e) {
        //            e.preventDefault();
        //            e.stopPropagation();
        //            if (myDropzone.getQueuedFiles().length > 0) {
        //                // queue processing
        //                myDropzone.processQueue();
        //            } else {
        //                // $("#formUpload").submit();
        //            }
        //            //tell Dropzone to process all queued files


        //        });
        //    }
        //};

        //$('.dz-error-mark').on('click')

    });
</script>
}

@Styles.Render("~/Content/dropzonescss")
