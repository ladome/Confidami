@using System.Web.UI.WebControls
@using Confidami.Common
@using Confidami.Web.ViewModel
@model Confidami.Web.ViewModel.PostViewModel



<form class="form-horizontal" role="form" action="@Url.Action("AddPost", "Contents")" method="post" @*data-parsley-validate*@>
    @*@Html.ValidationSummary(false)*@
    <div class="form-group">
        <label class="col-sm-2 control-label" for="title">Titolo</label>
        <div class="col-sm-10">
            <input type="text" class="form-control" id="title" name="title" placeholder="Titolo">
        </div>
    </div>

    <div class="form-group" id="body">
        <label class="col-sm-2 control-label" for="body">Messaggio</label>
        <div class="col-sm-10">
            <input type="text" class="form-control" id="body" name="body" placeholder="Messaggio">
        </div>
    </div>

    <div class="form-group" id="category">
        <label class="col-sm-2  control-label" for="body">Categoria</label>
        <div class="col-sm-10">
            <select name="idcategory" class="form-control">
                @foreach (var cat in Model.Categories)
                {
                    <option value="@cat.IdCategory">@cat.Description</option>
                }
            </select>
        </div>
    </div>

    <div class="form-group">
        <div class="col-sm-offset-2 col-sm-10">
            <input type="submit" value="Salva" class="btn btn-primary btn-sm" action=@Url.Action(ActionsStore.AddPost, ControllerStore.Contents)>
        </div>
    </div>

</form>

<!-- drop zone area -->

<div class="panel panel-default">
    <div class="panel-heading">Allega documenti alla segnalazione</div>
    <div class="panel-body">
        <form action=@Url.Action(ActionsStore.Upload, ControllerStore.Contents) method="post" enctype="multipart/form-data" class="dropzone" id="dropzoneForm">
            <div class="fallback">
                <input name="file" type="file" multiple />
                <input type="submit" value="Upload" />
            </div>
        </form>
    </div>
</div>
<!--------------------->


<h2>Lista</h2>
@if (Model != null)
{
    foreach (var post in Model.Posts)
    {
        if (Model.IsAdmin)
        {
            <form role="form" action="@Url.Action(ActionsStore.Approve, ControllerStore.Post)" method="POST">
                <div class="row">
                    <div class="col-md-12">
                        <div class="panel panel-default">
                            <div class="panel-heading">
                                <label>Titolo: @post.Title</label>
                                <br />
                                <label>Categoria: @post.CategoryPost</label>
                            </div>
                            <div class="panel-body">
                                <textarea>@post.Body</textarea>
                            </div>
                            <div class="panel-footer">
                                <input type="hidden" value="@post.IdPost" name="idpost" />
                                <input type="hidden" value="@Model.ReturnUrl" name="returnUrl" />
                                <input type="submit" class="btn btn-primary" value="OnApprovation" name="action:OnApprovation">
                                <input type="submit" class="btn btn-primary" value="Reject" name="action:Reject">
                            </div>
                        </div>
                    </div>
                </div>
            </form>
        }
        else
        {
            <div class="row">
                <div class="col-md-12">
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <label>Titolo: @post.Title</label>
                            <br />
                            <label>Categoria: @post.CategoryPost</label>
                        </div>
                        <div class="panel-body">
                            <textarea>@post.Body</textarea>
                        </div>
                    </div>
                </div>
            </div>
        }
    }
}


<!-- JS -->
@section scripts {
    <script type="text/javascript">

    Dropzone.options.dropzoneForm = {
        maxFiles: 3,
        init: function () {

            var thisDropzone = this;

            var jqxhr = $.getJSON("/@ControllerStore.Contents/GetTempAttachMents", function () {
                    
                }).done(function (attacchments) {
                    
                    $.each(attacchments, function (key, attacchment) {

                        console.log('Allegato '+key, attacchment);

                        @{
                            var path = @Url.Content("~/Uploads/Temp/" + ViewBag.CurrentUserId + "/");
                        }

                        var objAttachement = {
                            name: attacchment.Name,
                            size: attacchment.Size
                        };

                        thisDropzone.options.addedfile.call(thisDropzone, objAttachement);

                        var extension = attacchment.Name.substr((attacchment.Name.lastIndexOf('.') + 1));
                        extensionList = ['jpg', 'jpeg', 'png', 'gif'];
                        if (extensionList.indexOf(extension) != -1) {
                            thisDropzone.options.thumbnail.call(thisDropzone, objAttachement, '@(path)' + attacchment.Name);
                        }
                        thisDropzone.options.maxFiles = thisDropzone.options.maxFiles - 1;
                    });
                }).fail(function (jqxhr, textStatus, error) {
                    var err = textStatus + ", " + error;
                    console.log("Request Failed: " + err);
                }).always(function () {  });

                this.on("complete", function (attacchment) { // called once for file

                                    console.log('onComplete:',attacchment)

                                    var res = JSON.parse(attacchment.xhr.responseText);
                                });
                            }
                        };

        //Dropzone.options.formUpload = {

        //    //prevents Dropzone from uploading dropped files immediately
        //    autoProcessQueue: false,
        //    uploadMultiple: true,
        //    parallelUploads: 100,
        //    maxFiles: 4,
        //    maxFilesize : 2,

        //    init: function () {
        //        var submitButton = document.querySelector("#submit-all");
        //        var myDropzone = this; //closure

        //        submitButton.addEventListener("click", function(e) {
        //            e.preventDefault();
        //            e.stopPropagation();
        //            if (myDropzone.getQueuedFiles().length > 0) {
        //                // queue processing
        //                myDropzone.processQueue();
        //            } else {
        //                // $("#formUpload").submit();
        //            }
        //            //tell Dropzone to process all queued files


        //        });
        //    }
        //};

    </script>
}

@Styles.Render("~/Content/dropzonescss")
